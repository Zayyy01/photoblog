// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace PhotoblogInfrastructure.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    partial class BlogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PhotoblogDataAccess.Entities.Image", b =>
                {
                    b.Property<Guid>("StreamId")
                        //.ValueGeneratedOnAdd()
                        .HasColumnName("stream_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CachedFileSize")
                        .HasColumnName("cached_file_size")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnName("creation_time")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte[]>("FileStream")
                        .HasColumnName("file_stream")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileType")
                        .HasColumnName("file_type")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsArchive")
                        .HasColumnName("is_archive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDirectory")
                        .HasColumnName("is_directory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHidden")
                        .HasColumnName("is_hidden")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOffline")
                        .HasColumnName("is_offline")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnName("is_readonly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnName("is_system")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTemporary")
                        .HasColumnName("is_temporary")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastAccessTime")
                        .HasColumnName("last_access_time")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastWriteTime")
                        .HasColumnName("last_write_time")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ParentPathLocator")
                        .HasColumnName("parent_path_locator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathLocator")
                        .HasColumnName("path_locator")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StreamId");

                    b.ToTable("ImageStoreView");
                });
#pragma warning restore 612, 618
        }
    }
}
